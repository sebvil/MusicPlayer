[versions]
# sort
accompanist = "0.34.0"
activity-compose = "1.9.2"
agp = "8.6.1"
androidTools = "31.6.0"
annotationJvm = "1.8.2"
clikt = "4.4.0"
coil = "2.7.0"
compose = "1.7.2"
core-ktx = "1.13.1"
datastore = "1.1.1"
detekt = "1.23.7"
detekt-compose = "0.4.11"
fixture-monkey = "1.0.25"
koinAndroid = "4.0.0"
koinAnnotations = "1.4.0-RC4"
kotest = "5.9.1"
kotlin = "2.0.20"
kotlinpoet = "1.16.0"
kotlinpoetKsp = "1.18.1"
kotlinx-collections-immutable = "0.3.8"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization-json = "1.7.2"
kover = "0.8.3"
ksp = "2.0.20-1.0.25"
ktfmt = "0.18.0"
lifecycle = "2.8.5"
material3 = "1.3.0"
media3-exoplayer = "1.4.1"
reorderable = "2.3.3"
room = "2.7.0-alpha07"
turbine = "1.1.0"
vectordrawable = "1.2.0"
work-runtime-ktx = "2.9.1"
# endsort


# sort
[libraries]
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx" }
clikt = { module = "com.github.ajalt.clikt:clikt", version.ref = "clikt" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version.ref = "detekt-compose" }
fixture-monkey = { module = "com.navercorp.fixturemonkey:fixture-monkey-starter-kotlin", version.ref = "fixture-monkey" }
fixture-monkey-kotest = { module = "com.navercorp.fixturemonkey:fixture-monkey-kotest", version.ref = "fixture-monkey" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koinAndroid" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koinAndroid" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoetKsp" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections-immutable" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-guava = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-guava", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3-exoplayer" }
media3-session = { module = "androidx.media3:media3-session", version.ref = "media3-exoplayer" }
reorderable = { module = "sh.calvin.reorderable:reorderable", version.ref = "reorderable" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
symbol-processing-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
vectordrawable = { module = "androidx.vectordrawable:vectordrawable", version.ref = "vectordrawable" }
# endsort

# Dependencies of the included build-logic
# sort
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
androidx-annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotationJvm" }
compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
ktfmt-gradlePlugin = { group = "com.ncorti.ktfmt.gradle", name = "plugin", version.ref = "ktfmt" }
room-gradlePlugin = { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }
# endsort

[plugins]
# sort
android-library = { id = "com.android.library", version.ref = "agp" }
com-android-application = { id = "com.android.application", version.ref = "agp" }
com-google-devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmt" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
org-jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
org-jetbrains-kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
# endsort

# sort
musicplayer-android-application = { id = "musicplayer.android.application", version = "unspecified" }
musicplayer-android-feature = { id = "musicplayer.android.feature", version = "unspecified" }
musicplayer-android-library = { id = "musicplayer.android.library", version = "unspecified" }
musicplayer-jvm-library = { id = "musicplayer.jvm.library", version = "unspecified" }
# endsort

[bundles]
testing = [
    "kotest-assertions-core",
    "kotest-framework-datatest",
    "kotest-runner-junit5",
    "turbine",
]